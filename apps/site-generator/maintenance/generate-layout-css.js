#!/usr/bin/env node

/**
 * üé® CSS Variables Generator - Clean Architecture v1.1.3
 * 
 * ‚úÖ UTILISE le CSS layout-variables.css synchronis√© avec les composants React
 * üîß Plus de g√©n√©ration : utilise le CSS existant corrig√©
 */

const fs = require('fs');
const path = require('path');

function copyLayoutCSS(outputDir) {
  // üéØ NOUVEAU v1.1.3 : Copier le CSS corrig√© au lieu de le r√©g√©n√©rer
  const sourceCSS = path.join('/var/apps/logen/logen-templates', 'template-basic', 'src', 'styles', 'layout-variables.css');
  const destinationCSS = path.join(outputDir, 'src', 'styles', 'layout-variables.css');
  
  if (!fs.existsSync(sourceCSS)) {
    throw new Error('‚ùå CSS source non trouv√© : ' + sourceCSS);
  }
  
  // Cr√©er le dossier de destination s'il n'existe pas
  const destDir = path.dirname(destinationCSS);
  if (!fs.existsSync(destDir)) {
    fs.mkdirSync(destDir, { recursive: true });
  }
  
  // Copier le CSS corrig√©
  fs.copyFileSync(sourceCSS, destinationCSS);
  
  return destinationCSS;
}

function main() {
  try {
    const configFile = process.argv[2];
    const outputDir = process.argv[3];
    
    if (!configFile || !outputDir) {
      console.error('Usage: node generate-layout-css.js <config-file> <output-dir>');
      process.exit(1);
    }
    
    // Lecture de la configuration (pour log)
    let config = {};
    if (fs.existsSync(configFile)) {
      config = JSON.parse(fs.readFileSync(configFile, 'utf8'));
    }
    
    // Copier le CSS corrig√© v1.1.3
    const outputPath = copyLayoutCSS(outputDir);
    
    console.log('‚úÖ CSS Layout Variables synchronis√©:', outputPath);
    console.log('üîß Architecture v1.1.3 - CSS synchronis√© avec composants React');
    console.log('üìÑ Pages: Navbar + CSS classes + Titres configurables');
    console.log('üéØ Navbar pr√©sente + Styles appliqu√©s + v1.1 fonctionnalit√© maintenue');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la synchronisation CSS:', error.message);
    process.exit(1);
  }
}

// Ex√©cution si appel√© directement
if (require.main === module) {
  main();
}

module.exports = { copyLayoutCSS };
